---
name: "Lint"

# This reusable workflow runs the configure pre-commit hooks on the repository.
# It handles of the caching and the installation of the hooks.

on:
  workflow_call:
    inputs:
      curl_cache_dir:
        default: ~/.cache/curl
        description: "The directory to use for caching curl downloads."
        required: false
        type: string
      pip_cache_dir:
        default: ~/.cache/pip
        description: "The directory to use for caching pip downloads."
        required: false
        type: string
      pre_commit_cache_dir:
        default: ~/.cache/pre-commit
        description: "The directory to use for caching pre-commit downloads."
        required: false
        type: string
      go_version:
        default: '1.19'
        description: "The version of Go to use."
        required: false
        type: string
      python_version:
        default: '3.10'
        description: "The version of Python to use."
        required: false
        type: string
      shfmt_version:
        default: 'v3.5.1'
        description: "The version of shfmt (shell format) to use."
        required: false
        type: string

env:
  PIP_CACHE_DIR: ${{ inputs.pip_cache_dir }}
  PRE_COMMIT_CACHE_DIR: ~/.cache/pre-commit

jobs:
  lint:
    # Checks out the source and runs pre-commit hooks.  Detects coding errors
    # and style deviations.
    name: "Lint sources"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2.5.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            proxy.golang.org:443
            pypi.org:443
            registry.npmjs.org:443
            sum.golang.org:443

      - id: setup-python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ inputs.python_version }}

      # We need the Go version and Go cache location for the actions/cache step,
      # so the Go installation must happen before that.
      - uses: actions/setup-go@v4.0.1
        with:
          go-version: ${{ inputs.go_version }}

      - name: Store installed Go version
        id: go-version
        run: |
          echo version=$(go version | sed 's/^go version go\([0-9.]\+\) .*/\1/') >> $GITHUB_OUTPUT

      - name: Lookup Go cache directory
        id: go-cache
        run: |
          echo "dir=$(go env GOCACHE)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3.3.1
        env:
          BASE_CACHE_KEY: "${{ github.job }}-${{ runner.os }}-\
            py${{ inputs.python_version }}-\
            go${{ steps.go-version.outputs.version }}-"
        with:
          path: |
            ${{ inputs.pip_cache_dir }}
            ${{ inputs.pre_commit_cache_dir }}
            ${{ inputs.curl_cache_dir }}
            ${{ steps.go-cache.outputs.dir }}
          key: "${{ env.BASE_CACHE_KEY }}\
            ${{ hashFiles('**/requirements-test.txt') }}-\
            ${{ hashFiles('**/requirements.txt') }}-\
            ${{ hashFiles('**/.pre-commit-config.yaml') }}"
          restore-keys: |
            ${{ env.BASE_CACHE_KEY }}

      - name: Setup curl cache
        run: mkdir -p ${{ inputs.curl_cache_dir }}

      - name: Install shfmt
        run: go install mvdan.cc/sh/v3/cmd/shfmt@${{ inputs.shfmt_version }}

      - name: Checkout source
        uses: actions/checkout@v3.5.3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --requirement requirements-test.txt

      - name: Set up pre-commit hook environments
        run: pre-commit install-hooks

      - name: Run pre-commit on all files
        run: pre-commit run --all-files